mespace {{ namespace }};

use {{ namespacedModel }};
use {{ rootNamespace }}Http\Controllers\Controller;
use {{ namespacedRequests }}
use App\Helpers\Redirect;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Log;


class {{ class }} extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        return view('.index',[
            'page' => '{{ model }}',
            'title' => '{{ model }}',
            'breadcrumb' => '{{ model }}',
        ]);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return view('.create',[
            'page' => 'Add {{ model }}',
            'title' => 'Add {{ model }}',
        ]);
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \{{ namespacedStoreRequest }}  $request
     * @return \Illuminate\Http\Response
     */
    public function store({{ storeRequest }} $request)
    {
        $attr = $request->validated();

        try {
            DB::beginTransaction();
            ${{ modelVariable }} = {{ model }}::create($attr);
            DB::commit();
            $session = ['success', __('{{ model }} has been added')];
        } catch (\Throwable $e) {
            DB::rollBack();
            Log::info("Failed to add {{ model }} : {$e->getMessage()}");
            $session = ['success', __('Failed to add {{ model }}')];
        }
        session()->flash($sesion[0], $session[1]);
        return Redirect::to();
    }

    /**
     * Display the specified resource.
     *
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return \Illuminate\Http\Response
     */
    public function show({{ model }} ${{ modelVariable }})
    {

    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return \Illuminate\Http\Response
     */
    public function edit({{ model }} ${{ modelVariable }})
    {
        //
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \{{ namespacedUpdateRequest }}  $request
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return \Illuminate\Http\Response
     */
    public function update({{ updateRequest }} $request, {{ model }} ${{ modelVariable }})
    {
        $attr = $request->validated();

        try {
            DB::beginTransaction();
            ${{ modelVariable }}->update($attr);
            DB::commit();
            $session = ['success', __('{{ model }} has been updated')];
        } catch (\Throwable $e) {
            DB::rollBack();
            Log::info("Failed to update {{ model }} : {$e->getMessage()}");
            $session = ['success', __('Failed to update {{ model }}')];
        }
        session()->flash($sesion[0], $session[1]);
        return redirect()->route();
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return \Illuminate\Http\Response
     */
    public function destroy({{ model }} ${{ modelVariable }})
    {
        try {
            DB::beginTransaction();
            ${{ modelVariable }}->delete();
            DB::commit();
            $session = ['success', __('{{ model }} has been deleted')];
        } catch (\Throwable $e) {
            DB::rollBack();
            Log::info("Failed to delete {{ model }} : {$e->getMessage()}");
            $session = ['error', __('Failed to update {{ model }}')];
        }
        session()->flash($sesion[0], $session[1]);
        return back();
    }
}

